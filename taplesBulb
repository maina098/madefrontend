<!DOCTYPE html>
<html>
    <head>
        <title>Page Title</title>
    </head>
    <body>
        
    </body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Realistic Bulb Pull</title>
  <style>
    :root {
      --bg-light: #f4d7a1;
      --bg-dark: #111;
    }

    body {
      margin: 0;
      background: var(--bg-light);
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: background 0.4s ease;
      font-family: 'Segoe UI', sans-serif;
    }

    .instruction {
      position: absolute;
      top: 20px;
      text-align: center;
      font-size: 1.2em;
      background: rgba(255, 255, 255, 0.7);
      padding: 10px 20px;
      border-radius: 10px;
      border: 2px solid #333;
      z-index: 10;
    }

    .toggle-scene {
      position: absolute;
      height: 60vmin;
      overflow: visible !important;
    }

    .bulb {
      display: flex;
      flex-direction: column;
      align-items: center;
      user-select: none;
    }

    .bulb-glass {
      width: 90px;
      height: 120px;
      background: radial-gradient(circle at 30% 30%, #ffffcc, #e0e0a0);
      border-radius: 50% 50% 45% 45%;
      border: 4px solid #333;
      position: relative;
      box-shadow: 0 0 40px rgba(255, 255, 150, 0.5);
      transition: background 0.4s, box-shadow 0.3s, opacity 0.3s;
    }

    .bulb.off .bulb-glass {
      background: radial-gradient(circle at 30% 30%, #ccc, #aaa);
      box-shadow: none;
      opacity: 0.3;
    }

    .bulb-neck {
      width: 30px;
      height: 15px;
      background: #999;
      border: 3px solid #333;
      margin-top: -6px;
      border-radius: 4px;
    }

    .bulb-holder {
      width: 40px;
      height: 40px;
      background: linear-gradient(to bottom, #888, #bbb);
      border: 4px solid #333;
      border-radius: 0 0 10px 10px;
      margin-top: -2px;
    }

    .string {
      width: 3px;
      height: 100px;
      background: #333;
      position: relative;
      transition: transform 0.2s;
      cursor: grab;
    }

    .string.dragging {
      transform: translateY(20px);
    }

    .string-end {
      width: 18px;
      height: 18px;
      background: #fff;
      border: 2px solid #000;
      border-radius: 50%;
      position: absolute;
      bottom: -10px;
      left: 50%;
      transform: translateX(-50%);
    }
  </style>
</head>
<body>
  <div class="instruction">ðŸ’¡ Pull the string to turn the bulb ON/OFF</div>

  <div class="toggle-scene">
    <div class="bulb off" id="bulb">
      <div class="bulb-glass"></div>
      <div class="bulb-neck"></div>
      <div class="bulb-holder"></div>
      <div class="string" id="string">
        <div class="string-end"></div>
      </div>
    </div>
  </div>

  <script>
    const bulb = document.getElementById('bulb');
    const string = document.getElementById('string');
    const body = document.body;
    const instruction = document.querySelector('.instruction');
    let isOn = false;
    let isDragging = false;
    let startY = 0;

    string.addEventListener('mousedown', (e) => {
      isDragging = true;
      startY = e.clientY;
      string.classList.add('dragging');
    });

    window.addEventListener('mouseup', (e) => {
      if (!isDragging) return;
      isDragging = false;
      string.classList.remove('dragging');
      const endY = e.clientY;
      if (Math.abs(endY - startY) > 25) toggleBulb();
    });

    string.addEventListener('touchstart', (e) => {
      isDragging = true;
      startY = e.touches[0].clientY;
      string.classList.add('dragging');
    });

    window.addEventListener('touchend', (e) => {
      if (!isDragging) return;
      isDragging = false;
      string.classList.remove('dragging');
      const endY = e.changedTouches[0].clientY;
      if (Math.abs(endY - startY) > 25) toggleBulb();
    });

    function toggleBulb() {
      isOn = !isOn;
      bulb.classList.toggle('off');
      body.style.background = isOn ? 'var(--bg-dark)' : 'var(--bg-light)';
      instruction.innerText = isOn ? 'ðŸ’¡ Bulb is ON â€” Pull again to turn OFF' : 'ðŸ’¡ Bulb is OFF â€” Pull to turn ON';
    }
  </script>
</body>
</html>