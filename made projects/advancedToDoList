<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NexusFlow - Futuristic Task Management</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto:wght@300;400;500&display=swap">
    <style>
        :root {
            --primary: #00d9ff;
            --primary-dark: #0066ff;
            --secondary: #ff00aa;
            --bg-dark: #0a0a15;
            --bg-light: #1a1a2e;
            --text: #e0e0e0;
            --text-secondary: #b0b0b0;
            --success: #00ff88;
            --warning: #ffaa00;
            --danger: #ff3a5e;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--bg-dark);
            color: var(--text);
            min-height: 100vh;
            overflow-x: hidden;
            background-image: 
                radial-gradient(circle at 10% 20%, rgba(0, 214, 255, 0.1) 0%, transparent 20%),
                radial-gradient(circle at 90% 80%, rgba(255, 0, 170, 0.1) 0%, transparent 20%);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
            position: relative;
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 3rem;
            position: relative;
            z-index: 10;
        }

        .logo {
            font-family: 'Orbitron', sans-serif;
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            text-shadow: 0 0 10px rgba(0, 217, 255, 0.2);
            letter-spacing: 1px;
        }

        .date-display {
            font-size: 1.2rem;
            color: var(--text-secondary);
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .date-display::before {
            content: "";
            display: inline-block;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: var(--primary);
            box-shadow: 0 0 10px var(--primary);
        }

        .main-content {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 2rem;
        }

        .sidebar {
            background: rgba(26, 26, 46, 0.6);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            border: 1px solid rgba(255, 255, 255, 0.05);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            height: fit-content;
        }

        .sidebar-title {
            font-family: 'Orbitron', sans-serif;
            color: var(--primary);
            margin-bottom: 1.5rem;
            font-size: 1.3rem;
            letter-spacing: 1px;
            border-bottom: 1px solid rgba(0, 217, 255, 0.2);
            padding-bottom: 0.5rem;
        }

        .add-task-form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .form-group label {
            color: var(--text-secondary);
            font-size: 0.9rem;
        }

        .form-control {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 0.8rem 1rem;
            color: var(--text);
            font-family: inherit;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 2px rgba(0, 217, 255, 0.2);
        }

        .priority-select {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .priority-btn {
            flex: 1;
            padding: 0.5rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.8rem;
            font-weight: 500;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.05);
            color: var(--text-secondary);
        }

        .priority-btn.active {
            color: white;
            font-weight: bold;
        }

        .priority-btn.low.active {
            background: var(--success);
        }

        .priority-btn.medium.active {
            background: var(--warning);
        }

        .priority-btn.high.active {
            background: var(--danger);
        }

        .submit-btn {
            background: linear-gradient(90deg, var(--primary), var(--primary-dark));
            border: none;
            border-radius: 8px;
            padding: 1rem;
            color: white;
            font-family: 'Orbitron', sans-serif;
            font-size: 1rem;
            letter-spacing: 1px;
            cursor: pointer;
            margin-top: 1rem;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 217, 255, 0.3);
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 217, 255, 0.4);
        }

        .tasks-container {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .tasks-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .section-title {
            font-family: 'Orbitron', sans-serif;
            font-size: 1.5rem;
            letter-spacing: 1px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .filter-controls {
            display: flex;
            gap: 1rem;
        }

        .filter-btn {
            background: rgba(255, 255, 255, 0.1);
            border: none;
            border-radius: 5px;
            padding: 0.5rem 1rem;
            color: var(--text-secondary);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .filter-btn.active {
            background: var(--primary);
            color: white;
        }

        .task-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .task-card {
            background: rgba(26, 26, 46, 0.6);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            border: 1px solid rgba(255, 255, 255, 0.05);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .task-card::before {
            content: "";
            position: absolute;
            top: -1px;
            left: -1px;
            right: -1px;
            height: 3px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .task-card.high::before {
            opacity: 1;
            background: var(--danger);
        }

        .task-card.medium::before {
            opacity: 1;
            background: var(--warning);
        }

        .task-card.low::before {
            opacity: 1;
            background: var(--success);
        }

        .task-card.completed {
            opacity: 0.7;
        }

        .task-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.4);
        }

        .task-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }

        .task-title {
            font-size: 1.2rem;
            font-weight: 500;
            flex: 1;
        }

        .task-title.completed {
            text-decoration: line-through;
            color: var(--text-secondary);
        }

        .task-priority {
            display: inline-block;
            padding: 0.3rem 0.6rem;
            border-radius: 20px;
            font-size: 0.7rem;
            font-weight: bold;
            letter-spacing: 1px;
            text-transform: uppercase;
        }

        .task-priority.low {
            background: rgba(0, 255, 136, 0.1);
            color: var(--success);
        }

        .task-priority.medium {
            background: rgba(255, 170, 0, 0.1);
            color: var(--warning);
        }

        .task-priority.high {
            background: rgba(255, 58, 94, 0.1);
            color: var(--danger);
        }

        .task-description {
            color: var(--text-secondary);
            margin-bottom: 1.5rem;
            font-size: 0.95rem;
            line-height: 1.5;
        }

        .task-details {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .task-due {
            font-size: 0.9rem;
            color: var(--text-secondary);
        }

        .task-due.urgent {
            color: var(--danger);
            font-weight: bold;
        }

        .task-actions {
            display: flex;
            gap: 0.5rem;
        }

        .task-btn {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            border: none;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.1);
            color: var(--text-secondary);
        }

        .task-btn.complete {
            background: rgba(0, 255, 136, 0.1);
            color: var(--success);
        }

        .task-btn.delete {
            background: rgba(255, 58, 94, 0.1);
            color: var(--danger);
        }

        .task-btn:hover {
            transform: scale(1.1);
        }

        .task-btn.complete:hover {
            background: var(--success);
            color: white;
        }

        .task-btn.delete:hover {
            background: var(--danger);
            color: white;
        }

        .no-tasks {
            grid-column: 1 / -1;
            text-align: center;
            padding: 3rem;
            color: var(--text-secondary);
        }

        .search-container {
            margin-bottom: 2rem;
            position: relative;
        }

        .search-input {
            width: 100%;
            padding: 1rem 1rem 1rem 3rem;
            background: rgba(26, 26, 46, 0.6);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            color: var(--text);
            font-family: inherit;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: var(--primary);
            box-shadow: 0 0 0 2px rgba(0, 217, 255, 0.2);
        }

        .search-icon {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-secondary);
        }

        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }

            .task-list {
                grid-template-columns: 1fr;
            }

            .date-display {
                display: none;
            }
        }

        /* Futuristic decorative elements */
        .deco-circle {
            position: fixed;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(0, 217, 255, 0.2) 0%, transparent 70%);
            z-index: -1;
            animation: float 8s ease-in-out infinite;
        }

        .deco-circle:nth-child(1) {
            width: 300px;
            height: 300px;
            top: -150px;
            right: -150px;
            animation-delay: 0s;
        }

        .deco-circle:nth-child(2) {
            width: 400px;
            height: 400px;
            bottom: -200px;
            left: -200px;
            animation-delay: 2s;
            background: radial-gradient(circle, rgba(255, 0, 170, 0.2) 0%, transparent 70%);
        }

        @keyframes float {
            0%, 100% {
                transform: translate(0, 0);
            }
            50% {
                transform: translate(10px, 10px);
            }
        }
    </style>
</head>
<body>
    <div class="deco-circle"></div>
    <div class="deco-circle"></div>

    <div class="container">
        <header>
            <h1 class="logo">NexusFlow</h1>
            <div class="date-display" id="currentDate"></div>
        </header>

        <div class="main-content">
            <div class="sidebar">
                <h2 class="sidebar-title">New Task</h2>
                <form class="add-task-form" id="taskForm">
                    <div class="form-group">
                        <label for="taskTitle">Task Title</label>
                        <input type="text" id="taskTitle" class="form-control" placeholder="What needs to be done?" required>
                    </div>
                    <div class="form-group">
                        <label for="taskDescription">Description</label>
                        <textarea id="taskDescription" class="form-control" rows="3" placeholder="Add details..."></textarea>
                    </div>
                    <div class="form-group">
                        <label>Priority</label>
                        <div class="priority-select">
                            <button type="button" class="priority-btn low" data-priority="low">Low</button>
                            <button type="button" class="priority-btn medium active" data-priority="medium">Medium</button>
                            <button type="button" class="priority-btn high" data-priority="high">High</button>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="taskDue">Due Date</label>
                        <input type="date" id="taskDue" class="form-control">
                    </div>
                    <button type="submit" class="submit-btn">Create Task</button>
                </form>
            </div>

            <div class="tasks-container">
                <div class="search-container">
                    <input type="text" class="search-input" placeholder="Search tasks..." id="searchInput">
                    <span class="search-icon">🔄</span>
                </div>

                <div class="tasks-header">
                    <h2 class="section-title">Your Tasks</h2>
                    <div class="filter-controls">
                        <button type="button" class="filter-btn active" data-filter="all">All</button>
                        <button type="button" class="filter-btn" data-filter="completed">Completed</button>
                        <button type="button" class="filter-btn" data-filter="pending">Pending</button>
                    </div>
                </div>

                <div class="task-list" id="taskList">
                    <!-- Sample tasks will be rendered here -->
                    <div class="task-card medium">
                        <div class="task-header">
                            <h3 class="task-title">Complete project prototype</h3>
                            <span class="task-priority medium">Medium</span>
                        </div>
                        <p class="task-description">Finish the UI design and connect all API endpoints for the dashboard functionality.</p>
                        <div class="task-details">
                            <span class="task-due">Due: Tomorrow</span>
                            <div class="task-actions">
                                <button class="task-btn complete">✓</button>
                                <button class="task-btn delete">×</button>
                            </div>
                        </div>
                    </div>

                    <div class="task-card high">
                        <div class="task-header">
                            <h3 class="task-title">Fix critical security issue</h3>
                            <span class="task-priority high">High</span>
                        </div>
                        <p class="task-description">Vulnerability found in authentication middleware - needs immediate attention.</p>
                        <div class="task-details">
                            <span class="task-due urgent">Due: Today</span>
                            <div class="task-actions">
                                <button class="task-btn complete">✓</button>
                                <button class="task-btn delete">×</button>
                            </div>
                        </div>
                    </div>

                    <div class="task-card low completed">
                        <div class="task-header">
                            <h3 class="task-title completed">Schedule team meeting</h3>
                            <span class="task-priority low">Low</span>
                        </div>
                        <p class="task-description">Coordinate with all team members to find availability for next sprint planning.</p>
                        <div class="task-details">
                            <span class="task-due">Due: 2 days ago</span>
                            <div class="task-actions">
                                <button class="task-btn complete">✓</button>
                                <button class="task-btn delete">×</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Current date display
        document.addEventListener('DOMContentLoaded', function() {
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            const today = new Date();
            document.getElementById('currentDate').textContent = today.toLocaleDateString('en-US', options);
        });

        // Task Form Handling
        document.getElementById('taskForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const title = document.getElementById('taskTitle').value;
            const description = document.getElementById('taskDescription').value;
            const dueDate = document.getElementById('taskDue').value;
            const priority = document.querySelector('.priority-btn.active').dataset.priority;
            
            // Create new task (in a real app, you would save to a database)
            createTask(title, description, priority, dueDate);
            
            // Reset form
            this.reset();
            document.querySelector('.priority-btn.medium').classList.add('active');
            document.querySelectorAll('.priority-btn:not(.medium)').forEach(btn => btn.classList.remove('active'));
        });

        // Priority selector
        document.querySelectorAll('.priority-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                document.querySelectorAll('.prio